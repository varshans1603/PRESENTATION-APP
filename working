<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>Smart Presenter – Cyberpunk Edition</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
<style>
    :root {
        --bg: #0a1a2f;
        --card: #112240;
        --glass: rgba(255, 255, 255, 0.08);
        --accent: #00ffff;
        --accent-hover: #00cccc;
        --text: #e0f7fa;
        --shadow: 0 8px 32px rgba(0, 255, 255, 0.2);
        --border: 1px solid rgba(0, 255, 255, 0.3);
    }

    * { box-sizing: border-box; margin: 0; padding: 0; }
    body {
        background: var(--bg);
        color: var(--text);
        font-family: 'Segoe UI', Arial, sans-serif;
        min-height: 100vh;
        padding: 1.5rem;
        display: flex;
        flex-direction: column;
        align-items: center;
        line-height: 1.6;
    }

    h1 {
        font-size: 2rem;
        margin: 1rem 0;
        color: var(--accent);
        text-shadow: 0 0 15px rgba(0, 255, 255, 0.5);
    }

    /* Upload Zone */
    #upload-zone {
        width: 90vw;
        max-width: 500px;
        height: 120px;
        border: 2px dashed var(--accent);
        border-radius: 16px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.3s ease;
        margin: 1rem 0;
        background: var(--glass);
        backdrop-filter: blur(8px);
        box-shadow: var(--shadow);
    }
    #upload-zone:hover {
        background: rgba(0, 255, 255, 0.1);
        border-color: var(--accent-hover);
        transform: translateY(-2px);
    }
    #upload-zone.dragover {
        background: rgba(0, 255, 255, 0.2);
        border-style: solid;
    }
    #upload { display: none; }
    #upload-label {
        font-weight: bold;
        font-size: 1.1rem;
        color: var(--accent);
    }

    /* Controls */
    .controls {
        display: flex;
        flex-wrap: wrap;
        gap: 12px;
        justify-content: center;
        margin: 1.5rem 0;
        width: 100%;
        max-width: 800px;
    }
    button {
        padding: 12px 20px;
        background: var(--glass);
        color: var(--text);
        border: var(--border);
        border-radius: 12px;
        font-weight: bold;
        cursor: pointer;
        transition: all 0.3s ease;
        min-width: 100px;
        font-size: 0.95rem;
        backdrop-filter: blur(8px);
    }
    button:hover {
        background: rgba(0, 255, 255, 0.2);
        transform: translateY(-2px);
        box-shadow: var(--shadow);
        border-color: var(--accent);
    }
    button.active {
        background: #ff00ff;
        color: white;
        border: none;
        box-shadow: 0 0 20px rgba(255, 0, 255, 0.6);
    }
    button:disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }

    /* Status */
    #status {
        font-weight: bold;
        font-size: 1.1rem;
        text-align: center;
        padding: 12px;
        background: var(--glass);
        border-radius: 12px;
        width: 90vw;
        max-width: 800px;
        margin: 0.5rem 0;
        color: var(--accent);
        box-shadow: var(--shadow);
        backdrop-filter: blur(8px);
        border: var(--border);
    }

    /* Canvas Container */
    #container {
        position: relative;
        width: 90vw;
        max-width: 1000px;
        height: 65vh;
        border: 2px solid var(--accent);
        border-radius: 16px;
        overflow: hidden;
        background: white;
        margin: 1rem 0;
        box-shadow: var(--shadow);
    }
    canvas { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }

    /* Video Feed - FIXED: ALWAYS VISIBLE */
    #video-container {
        position: fixed !important;
        bottom: 20px !important;
        right: 20px !important;
        width: 220px !important;
        height: 165px !important;
        border: 3px solid var(--accent) !important;
        border-radius: 16px !important;
        overflow: hidden !important;
        box-shadow: var(--shadow) !important;
        z-index: 999 !important;
        display: block !important;
        background: #000 !important;
    }
    #video {
        width: 100% !important;
        height: 100% !important;
        transform: scaleX(-1) !important;
        object-fit: cover !important;
        border-radius: 12px !important;
        display: block !important;
    }

    /* Laser */
    #laser-pointer {
        position: absolute;
        width: 20px;
        height: 20px;
        background: red;
        border: 4px solid #ff6666;
        border-radius: 50%;
        pointer-events: none;
        display: none;
        transform: translate(-50%, -50%);
        box-shadow: 0 0 20px 8px rgba(255, 0, 0, 0.8);
        z-index: 20;
    }

    /* Recognized Text */
    #recognized-text {
        position: absolute;
        top: 16px;
        left: 16px;
        z-index: 15;
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
        pointer-events: none;
    }
    .rec-text {
        background: rgba(0, 255, 0, 0.2);
        color: #00ff00;
        padding: 6px 12px;
        border-radius: 8px;
        font-size: 0.9rem;
        font-weight: bold;
        border: 1px solid #0f0;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
        backdrop-filter: blur(4px);
    }

    /* Debug Panel */
    #debug-container {
        width: 90vw;
        max-width: 800px;
        margin: 1.5rem 0;
    }
    #debug-header {
        background: var(--glass);
        padding: 12px;
        border-radius: 12px 12px 0 0;
        cursor: pointer;
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-weight: bold;
        color: var(--accent);
        backdrop-filter: blur(8px);
        border: var(--border);
    }
    #debug {
        background: #000;
        color: #0f0;
        font-family: 'Courier New', monospace;
        font-size: 0.85rem;
        max-height: 150px;
        overflow-y: auto;
        padding: 12px;
        border-radius: 0 0 12px 12px;
        display: none;
        border: var(--border);
        border-top: none;
    }
    #debug.show { display: block; }

    /* 🎯 USER GUIDE OVERLAY */
    #user-guide {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background: rgba(10, 26, 47, 0.95);
        backdrop-filter: blur(20px);
        z-index: 9999;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 2rem;
        opacity: 0;
        visibility: hidden;
        transition: all 0.5s ease;
    }
    #user-guide.show {
        opacity: 1;
        visibility: visible;
    }
    #guide-content {
        max-width: 800px;
        max-height: 80vh;
        overflow-y: auto;
        background: rgba(17, 34, 64, 0.9);
        border: 2px solid rgba(0, 255, 255, 0.5);
        border-radius: 20px;
        padding: 2.5rem;
        box-shadow: 0 20px 60px rgba(0, 255, 255, 0.3);
    }
    #guide-header {
        text-align: center;
        margin-bottom: 2rem;
    }
    #guide-header h1 {
        font-size: 2.5rem;
        background: linear-gradient(45deg, #00ffff, #ff00ff);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        margin: 0;
        text-shadow: 0 0 30px rgba(0, 255, 255, 0.5);
    }
    .guide-section {
        margin: 2rem 0;
        padding: 1.5rem;
        background: rgba(0, 255, 255, 0.1);
        border-radius: 16px;
        border-left: 5px solid var(--accent);
    }
    .guide-section h3 {
        color: var(--accent);
        font-size: 1.4rem;
        margin-bottom: 1rem;
        display: flex;
        align-items: center;
        gap: 10px;
    }
    .guide-command {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 12px;
        margin: 8px 0;
        background: rgba(255, 255, 255, 0.05);
        border-radius: 12px;
        border: 1px solid rgba(0, 255, 255, 0.2);
    }
    .guide-command span:first-child {
        font-weight: bold;
        color: #00ff88;
        background: rgba(0, 255, 136, 0.1);
        padding: 6px 12px;
        border-radius: 8px;
    }
    .guide-command span:last-child {
        color: #ffaa00;
        font-weight: bold;
    }
    .guide-btn {
        padding: 15px 30px;
        background: linear-gradient(45deg, #00ffff, #0088cc);
        border: none;
        border-radius: 12px;
        color: white;
        font-weight: bold;
        font-size: 1.1rem;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 8px 25px rgba(0, 255, 255, 0.4);
    }
    .guide-btn:hover {
        transform: translateY(-3px);
        box-shadow: 0 15px 35px rgba(0, 255, 255, 0.6);
    }
    .guide-shortcut {
        background: rgba(255, 0, 255, 0.2);
        color: #ff66ff;
        padding: 4px 8px;
        border-radius: 6px;
        font-size: 0.9rem;
        font-family: monospace;
    }

    /* Voice Status */
    #voice-status {
        position: fixed;
        top: 20px;
        left: 20px;
        background: rgba(0,255,0,0.2);
        color: #0f0;
        padding: 10px 15px;
        border-radius: 8px;
        font-weight: bold;
        z-index: 1000;
        border: 1px solid #0f0;
        display: none;
    }

    /* Responsive */
    @media (max-width: 768px) {
        h1 { font-size: 1.6rem; }
        button { padding: 10px 16px; font-size: 0.9rem; }
        #container { height: 55vh; }
        #video-container { width: 160px; height: 120px; bottom: 15px; right: 15px; }
        #guide-content { padding: 1.5rem; margin: 1rem; }
        #guide-header h1 { font-size: 2rem; }
        .guide-section { margin: 1rem 0; padding: 1rem; }
    }
</style>
</head>
<body>

<h1>🧠 Smart Presenter</h1>

<!-- Upload Zone -->
<div id="upload-zone">
    <input type="file" id="upload" accept=".pdf">
    <label id="upload-label" for="upload">📁 Drop PDF or Click to Upload</label>
</div>

<!-- Mode Buttons -->
<div class="controls">
    <button data-mode="mouse" class="active">🖱️ Mouse</button>
    <button data-mode="gesture">✋ Gesture</button>
    <button data-mode="voice">🎤 Voice</button>
</div>

<!-- Mouse Tools -->
<div class="controls" id="mouse-tools">
    <button data-tool="draw" class="active">✏️ Draw</button>
    <button data-tool="highlight">🔆 Highlight</button>
    <button data-tool="erase">🗑️ Erase</button>
    <button data-tool="laser">🔴 Laser</button>
    <button data-tool="none">⏹️ Stop</button>
</div>

<!-- Navigation -->
<div class="controls">
    <button id="prev">⬅️ Prev</button>
    <button id="next">➡️ Next</button>
    <button id="clear">🗑️ Clear All</button>
</div>

<!-- Status -->
<div id="status">Ready - Upload PDF to start</div>

<!-- Canvas -->
<div id="container">
    <canvas id="pdf-canvas"></canvas>
    <canvas id="annotation-canvas"></canvas>
    <div id="laser-pointer"></div>
    <div id="recognized-text"></div>
</div>

<!-- Video Feed -->
<div id="video-container">
    <video id="video" autoplay playsinline muted></video>
</div>

<!-- Voice Status -->
<div id="voice-status"></div>

<!-- 🎯 USER GUIDE OVERLAY -->
<div id="user-guide">
    <div id="guide-content">
        <div id="guide-header">
            <h1>🧠 Smart Presenter</h1>
            <p style="color: #00ff88; font-size: 1.2rem; margin-top: 1rem;">
                Voice • Gesture • Mouse • Laser
            </p>
        </div>
        
        <div class="guide-section">
            <h3>🎤 VOICE COMMANDS</h3>
            <div class="guide-command"><span>"next"</span><span>➡️ Next Slide</span></div>
            <div class="guide-command"><span>"previous" / "back"</span><span>⬅️ Previous</span></div>
            <div class="guide-command"><span>"page 2" / "page five"</span><span>📄 Go to Page #</span></div>
            <div class="guide-command"><span>"draw hello world"</span><span>✍️ Write Text</span></div>
            <div class="guide-command"><span>"stop"</span><span>✅ Stop Writing</span></div>
            <div class="guide-command"><span>"clear"</span><span>🗑️ Erase All</span></div>
        </div>
        
        <div class="guide-section">
            <h3>✋ GESTURE CONTROL</h3>
            <div style="text-align: center; font-size: 1.2rem; color: #ffaa00;">
                👈 <strong>LEFT HAND</strong> = Next ➡️<br>
                👉 <strong>RIGHT HAND</strong> = Previous ⬅️<br><br>
                <small>Hold 2 seconds • Camera bottom-right</small>
            </div>
        </div>
        
        <div class="guide-section">
            <h3>🖱️ MOUSE TOOLS</h3>
            <div class="guide-command"><span>✏️ Draw</span><span>Red Pen</span></div>
            <div class="guide-command"><span>🔆 Highlight</span><span>Yellow Marker</span></div>
            <div class="guide-command"><span>🗑️ Erase</span><span>Clear Drawings</span></div>
            <div class="guide-command"><span>🔴 Laser</span><span>Red Dot Pointer</span></div>
        </div>
        
        <div style="text-align: center; margin-top: 2rem;">
            <button class="guide-btn" onclick="closeUserGuide()">🚀 Start Presenting</button>
            <p style="margin-top: 1rem; color: #888; font-size: 0.95rem;">
                Press <span class="guide-shortcut">F1</span> anytime to show this guide
            </p>
        </div>
    </div>
</div>

<!-- Debug Panel -->
<div id="debug-container">
    <div id="debug-header" onclick="this.nextElementSibling.classList.toggle('show')">
        🔍 Debug Console <span>▼</span>
    </div>
    <div id="debug"></div>
</div>

<!-- HELPERS -->
<script>
window.debug = (msg) => {
    const d = $('#debug');
    const t = new Date().toLocaleTimeString();
    d.innerHTML += `<div>[${t}] ${msg}</div>`;
    d.scrollTop = d.scrollHeight;
};
window.toast = (msg, dur = 2000) => {
    const t = document.createElement('div');
    t.textContent = msg;
    t.style.cssText = `
        position:fixed; bottom:20px; left:50%; transform:translateX(-50%);
        background:rgba(0,255,255,0.2); color:#0ff; padding:12px 24px;
        border-radius:12px; font-weight:bold; z-index:1000;
        backdrop-filter:blur(8px); border:1px solid #0ff;
    `;
    document.body.appendChild(t);
    setTimeout(() => t.remove(), dur);
};
window.speak = (txt) => {
    const u = new SpeechSynthesisUtterance(txt);
    u.rate = 1.6;
    speechSynthesis.speak(u);
};
window.$ = s => document.querySelector(s);
window.$$ = s => [...document.querySelectorAll(s)];

// 🎯 USER GUIDE FUNCTIONS
function showUserGuide() {
    $('#user-guide').classList.add('show');
    debug('🎯 User Guide Shown');
}
function closeUserGuide() {
    $('#user-guide').classList.remove('show');
    debug('🎯 User Guide Closed');
}
// Auto-show on first load
if (!localStorage.getItem('guideSeen')) {
    setTimeout(showUserGuide, 1000);
    localStorage.setItem('guideSeen', 'true');
}
// F1 key to toggle guide
document.addEventListener('keydown', (e) => {
    if (e.key === 'F1') {
        e.preventDefault();
        $('#user-guide').classList.toggle('show');
    }
});
// Add guide button to controls
const controls = $('.controls')[0];
const guideBtn = document.createElement('button');
guideBtn.textContent = '❓ Help';
guideBtn.onclick = showUserGuide;
controls.appendChild(guideBtn);
</script>

<!-- PDF.JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.6.347/pdf.min.js"></script>
<script>
pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.6.347/pdf.worker.min.js';
debug('PDF.js loaded');
</script>

<!-- DRAG & DROP UPLOAD -->
<script>
const zone = $('#upload-zone');
const input = $('#upload');
zone.addEventListener('click', () => input.click());
zone.addEventListener('dragover', e => { e.preventDefault(); zone.classList.add('dragover'); });
zone.addEventListener('dragleave', () => zone.classList.remove('dragover'));
zone.addEventListener('drop', e => {
    e.preventDefault();
    zone.classList.remove('dragover');
    const file = e.dataTransfer.files[0];
    if (file && file.type === 'application/pdf') {
        input.files = e.dataTransfer.files;
        input.dispatchEvent(new Event('change'));
    }
});
</script>

<!-- MAIN APP -->
<script type="module" src="./main.js"></script>

</body>
</html>